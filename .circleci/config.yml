version: 2.1

executors:
  nodejs-browsers:
    docker:
      - image: circleci/node:12.19.0-browsers
  nodejs:
    docker:
      - image: circleci/node:12.19

jobs:
  test-ballot-encoder:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/ballot-encoder build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/ballot-encoder lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/ballot-encoder test

  test-bas:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/bas build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/bas lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/bas test

  test-bmd-main:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/bmd build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/bmd lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/bmd test

  test-bmd-integration:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/bmd build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/bmd lint
      - run:
          name: Test
          command: |
                  pnpm --dir apps/bmd test:e2e

  test-bsd:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/bsd build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/bsd lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/bsd test

  test-election-manager:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/election-manager build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/election-manager lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/election-manager test

  test-eslint-plugin-vx:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/eslint-plugin-vx build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/eslint-plugin-vx lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/eslint-plugin-vx test

  test-fixtures:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/fixtures build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/fixtures lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/fixtures test

  test-logging:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/logging build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/logging lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/logging test

  test-hmpb-interpreter:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/hmpb-interpreter build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/hmpb-interpreter lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/hmpb-interpreter test

  test-lsd:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/lsd build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/lsd lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/lsd test

  test-module-converter-ms-sems:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          name: Dependencies
          command: |
            sudo apt update -y
            make -C apps/module-converter-ms-sems install-dependencies
            make -C apps/module-converter-ms-sems install-dev-dependencies
      - run:
          name: Test
          command: |
            make -C apps/module-converter-ms-sems coverage
      # - run:
      #     name: Typecheck
      #     command: |
      #       make -C apps/module-converter-ms-sems typecheck

  test-module-scan:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/module-scan build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/module-scan lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/module-scan test

  test-module-smartcards:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          name: Dependencies
          command: |
            sudo apt update -y
            make -C apps/module-smartcards install-smartcard
            make -C apps/module-smartcards build-dev
      - run:
          name: Test
          command: |
            make -C apps/module-smartcards coverage
      - run:
          name: Typecheck
          command: |
            make -C apps/module-smartcards typecheck

  test-plustek-sdk:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/plustek-sdk build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/plustek-sdk lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/plustek-sdk test

  test-precinct-scanner:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir apps/precinct-scanner build
      - run:
          name: Lint
          command: |
            pnpm --dir apps/precinct-scanner lint
      - run:
          name: Test
          command: |
            pnpm --dir apps/precinct-scanner test

  test-types:
    executor: nodejs
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/types build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/types lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/types test

  test-ui:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/ui build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/ui lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/ui test

  test-utils:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/utils test

  test-test-utils:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir libs/test-utils build
      - run:
          name: Lint
          command: |
            pnpm --dir libs/test-utils lint
      - run:
          name: Test
          command: |
            pnpm --dir libs/test-utils test

  test-codemods:
    executor: nodejs-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir codemods build
      - run:
          name: Lint
          command: |
            pnpm --dir codemods lint
      - run:
          name: Test
          command: |
            pnpm --dir codemods test

  test-integration-testing-bsd:
    docker:
      - image: circleci/python:3.7.7-node-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir integration-testing/bsd build
      - run:
          name: Lint
          command: |
            pnpm --dir integration-testing/bsd lint
      - run:
          name: Test
          command: |
            pnpm --dir integration-testing/bsd test

  test-integration-testing-election-manager:
    docker:
      - image: circleci/python:3.7.7-node-browsers
    resource_class: xlarge
    steps:
      - checkout-and-install
      - run:
          name: Build
          command: |
            pnpm --dir integration-testing/election-manager build
      - run:
          name: Lint
          command: |
            pnpm --dir integration-testing/election-manager lint
      - run:
          name: Test
          command: |
            pnpm --dir integration-testing/election-manager test

workflows:
  test:
    jobs:
      - test-ballot-encoder
      - test-bas
      - test-bmd-main
      - test-bmd-integration
      - test-bsd
      - test-election-manager
      - test-eslint-plugin-vx
      - test-fixtures
      - test-hmpb-interpreter
      - test-integration-testing-bsd
      - test-integration-testing-election-manager
      - test-logging
      - test-lsd
      - test-module-converter-ms-sems
      - test-module-scan
      - test-module-smartcards
      - test-plustek-sdk
      - test-precinct-scanner
      - test-test-utils
      - test-types
      - test-ui
      - test-utils

commands:
  checkout-and-install:
    description: Get the code and install dependencies.
    steps:
      - run:
          name: Install pnpm
          command: |
            curl -f https://get.pnpm.io/v6.js | sudo node - add --global pnpm@5
      - checkout
      # Edit this comment somehow in order to invalidate the CircleCI cache.
      # Since the contents of this file affect the cache key, editing only a
      # comment will invalidate the cache without changing the behavior.
      - restore_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum
            "pnpm-lock.yaml" }}
      - run:
          name: Setup Dependencies
          command: pnpm install --frozen-lockfile
      - save_cache:
          key:
            dotcache-cache-{{checksum ".circleci/config.yml" }}-{{ checksum
            "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
