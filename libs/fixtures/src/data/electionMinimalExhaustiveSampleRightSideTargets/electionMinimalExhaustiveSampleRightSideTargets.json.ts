/* Generated by res-to-ts. DO NOT EDIT */
/* eslint-disable */
/* istanbul ignore file */

import { Buffer } from 'buffer';
import { mkdtempSync, writeFileSync } from 'fs';
import { tmpdir } from 'os';
import { join, sep } from 'path';
import { safeParseElectionDefinition } from '@votingworks/types';

/**
 * Data of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json encoded as base64.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
const resourceDataBase64 = 'ewogICJ0aXRsZSI6ICJFeGFtcGxlIFByaW1hcnkgRWxlY3Rpb24iLAogICJzdGF0ZSI6ICJTdGF0ZSBvZiBTYW1wbGUiLAogICJjb3VudHkiOiB7CiAgICAiaWQiOiAic2FtcGxlLWNvdW50eSIsCiAgICAibmFtZSI6ICJTYW1wbGUgQ291bnR5IgogIH0sCiAgImRhdGUiOiAiMjAyMS0wOS0wOFQwMDowMDowMC0wODowMCIsCiAgImJhbGxvdExheW91dCI6IHsKICAgICJwYXBlclNpemUiOiAibGV0dGVyIiwKICAgICJ0YXJnZXRNYXJrUG9zaXRpb24iOiAicmlnaHQiCiAgfSwKICAiZGlzdHJpY3RzIjogWwogICAgewogICAgICAiaWQiOiAiZGlzdHJpY3QtMSIsCiAgICAgICJuYW1lIjogIkRpc3RyaWN0IDEiCiAgICB9CiAgXSwKICAicGFydGllcyI6IFsKICAgIHsKICAgICAgImlkIjogIjAiLAogICAgICAibmFtZSI6ICJNYW1tYWwiLAogICAgICAiZnVsbE5hbWUiOiAiTWFtbWFsIFBhcnR5IiwKICAgICAgImFiYnJldiI6ICJNYSIKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIxIiwKICAgICAgIm5hbWUiOiAiRmlzaCIsCiAgICAgICJmdWxsTmFtZSI6ICJGaXNoIFBhcnR5IiwKICAgICAgImFiYnJldiI6ICJGIgogICAgfQogIF0sCiAgImNvbnRlc3RzIjogWwogICAgewogICAgICAiaWQiOiAiYmVzdC1hbmltYWwtbWFtbWFsIiwKICAgICAgImRpc3RyaWN0SWQiOiAiZGlzdHJpY3QtMSIsCiAgICAgICJ0eXBlIjogImNhbmRpZGF0ZSIsCiAgICAgICJzZWN0aW9uIjogIlN0YXRlIiwKICAgICAgInRpdGxlIjogIkJlc3QgQW5pbWFsIiwKICAgICAgInNlYXRzIjogMSwKICAgICAgInBhcnR5SWQiOiAiMCIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJob3JzZSIsCiAgICAgICAgICAibmFtZSI6ICJIb3JzZSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIm90dGVyIiwKICAgICAgICAgICJuYW1lIjogIk90dGVyIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZm94IiwKICAgICAgICAgICJuYW1lIjogIkZveCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgImlkIjogImJlc3QtYW5pbWFsLWZpc2giLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAiY2FuZGlkYXRlIiwKICAgICAgInNlY3Rpb24iOiAiU3RhdGUiLAogICAgICAidGl0bGUiOiAiQmVzdCBBbmltYWwiLAogICAgICAic2VhdHMiOiAxLAogICAgICAicGFydHlJZCI6ICIxIiwKICAgICAgImNhbmRpZGF0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogInNlYWhvcnNlIiwKICAgICAgICAgICJuYW1lIjogIlNlYWhvcnNlIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAic2FsbW9uIiwKICAgICAgICAgICJuYW1lIjogIlNhbG1vbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgImlkIjogInpvby1jb3VuY2lsLW1hbW1hbCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAic2VjdGlvbiI6ICJDaXR5IiwKICAgICAgInRpdGxlIjogIlpvbyBDb3VuY2lsIiwKICAgICAgInNlYXRzIjogMywKICAgICAgInBhcnR5SWQiOiAiMCIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJ6ZWJyYSIsCiAgICAgICAgICAibmFtZSI6ICJaZWJyYSIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImxpb24iLAogICAgICAgICAgIm5hbWUiOiAiTGlvbiIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjAiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImthbmdhcm9vIiwKICAgICAgICAgICJuYW1lIjogIkthbmdhcm9vIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMCJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZWxlcGhhbnQiLAogICAgICAgICAgIm5hbWUiOiAiRWxlcGhhbnQiLAogICAgICAgICAgInBhcnR5SWRzIjogWyIwIl0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhbGxvd1dyaXRlSW5zIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgImlkIjogImFxdWFyaXVtLWNvdW5jaWwtZmlzaCIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJjYW5kaWRhdGUiLAogICAgICAic2VjdGlvbiI6ICJDaXR5IiwKICAgICAgInRpdGxlIjogIlpvbyBDb3VuY2lsIiwKICAgICAgInNlYXRzIjogMiwKICAgICAgInBhcnR5SWQiOiAiMSIsCiAgICAgICJjYW5kaWRhdGVzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJtYW50YS1yYXkiLAogICAgICAgICAgIm5hbWUiOiAiTWFudGEgUmF5IiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAicHVmZmVyZmlzaCIsCiAgICAgICAgICAibmFtZSI6ICJQdWZmZXJmaXNoIiwKICAgICAgICAgICJwYXJ0eUlkcyI6IFsiMSJdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAicm9ja2Zpc2giLAogICAgICAgICAgIm5hbWUiOiAiUm9ja2Zpc2giLAogICAgICAgICAgInBhcnR5SWRzIjogWyIxIl0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJ0cmlnZ2VyZmlzaCIsCiAgICAgICAgICAibmFtZSI6ICJUcmlnZ2VyZmlzaCIsCiAgICAgICAgICAicGFydHlJZHMiOiBbIjEiXQogICAgICAgIH0KICAgICAgXSwKICAgICAgImFsbG93V3JpdGVJbnMiOiB0cnVlCiAgICB9LAogICAgewogICAgICAiaWQiOiAibmV3LXpvby1laXRoZXItbmVpdGhlciIsCiAgICAgICJzZWN0aW9uIjogIkNpdHkiLAogICAgICAiZGlzdHJpY3RJZCI6ICJkaXN0cmljdC0xIiwKICAgICAgInR5cGUiOiAibXMtZWl0aGVyLW5laXRoZXIiLAogICAgICAidGl0bGUiOiAiQmFsbG90IE1lYXN1cmUgMSIsCiAgICAgICJwYXJ0eUlkIjogIjAiLAogICAgICAiZWl0aGVyTmVpdGhlckNvbnRlc3RJZCI6ICJuZXctem9vLWVpdGhlciIsCiAgICAgICJwaWNrT25lQ29udGVzdElkIjogIm5ldy16b28tcGljayIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJbml0aWF0aXZlIE1lYXN1cmUgTm8uIDEyLCBTaG91bGQgU2FtcGxlIENpdHkgZXN0YWJsaXNoIGEgbmV3IHNhZmFyaS1zdHlsZSB6b28gY29zdGluZyAyLDAwMCwwMDA/XG5cbiBBbHRlcm5hdGl2ZSBNZWFzdXJlIDEyIEEsIFNob3VsZCBTYW1wbGUgQ2l0eSBlc3RhYmxpc2ggYSBuZXcgdHJhZGl0aW9uYWwgem9vIGNvc3RpbmcgMSwwMDAsMDAwPyIsCiAgICAgICJlaXRoZXJOZWl0aGVyTGFiZWwiOiAiVk9URSBGT1IgQVBQUk9WQUwgT0YgRUlUSEVSLCBPUiBBR0FJTlNUIEJPVEgiLAogICAgICAicGlja09uZUxhYmVsIjogIkFORCBWT1RFIEZPUiBPTkUiLAogICAgICAiZWl0aGVyT3B0aW9uIjogewogICAgICAgICJpZCI6ICJuZXctem9vLWVpdGhlci1hcHByb3ZlZCIsCiAgICAgICAgImxhYmVsIjogIkZPUiBBUFBST1ZBTCBPRiBFSVRIRVIgSW5pdGlhdGl2ZSBOby4gMTIgT1IgQWx0ZXJuYXRpdmUgSW5pdGlhdGl2ZSBOby4gMTIgQSIKICAgICAgfSwKICAgICAgIm5laXRoZXJPcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tbmVpdGhlci1hcHByb3ZlZCIsCiAgICAgICAgImxhYmVsIjogIkFHQUlOU1QgQk9USCBJbml0aWF0aXZlIE5vLiAxMiBBTkQgQWx0ZXJuYXRpdmUgTWVhc3VyZSAxMiBBIgogICAgICB9LAogICAgICAiZmlyc3RPcHRpb24iOiB7CiAgICAgICAgImlkIjogIm5ldy16b28tc2FmYXJpIiwKICAgICAgICAibGFiZWwiOiAiRk9SIEluaXRpYXRpdmUgTm8uIDEyIgogICAgICB9LAogICAgICAic2Vjb25kT3B0aW9uIjogewogICAgICAgICJpZCI6ICJuZXctem9vLXRyYWRpdGlvbmFsIiwKICAgICAgICAibGFiZWwiOiAiRk9SIEFsdGVybmF0aXZlIE1lYXN1cmUgTm8uIDEyIEEiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJmaXNoaW5nIiwKICAgICAgInNlY3Rpb24iOiAiQ2l0eSIsCiAgICAgICJkaXN0cmljdElkIjogImRpc3RyaWN0LTEiLAogICAgICAidHlwZSI6ICJ5ZXNubyIsCiAgICAgICJ0aXRsZSI6ICJCYWxsb3QgTWVhc3VyZSAzIiwKICAgICAgInBhcnR5SWQiOiAiMSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTaG91bGQgZmlzaGluZyBiZSBiYW5uZWQgaW4gYWxsIGNpdHkgb3duZWQgbGFrZXMgYW5kIHJpdmVycz8iLAogICAgICAieWVzT3B0aW9uIjogewogICAgICAgICJpZCI6ICJiYW4tZmlzaGluZyIsCiAgICAgICAgImxhYmVsIjogIllFUyIKICAgICAgfSwKICAgICAgIm5vT3B0aW9uIjogewogICAgICAgICJpZCI6ICJhbGxvdy1maXNoaW5nIiwKICAgICAgICAibGFiZWwiOiAiTk8iCiAgICAgIH0KICAgIH0KICBdLAogICJwcmVjaW5jdHMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJwcmVjaW5jdC0xIiwKICAgICAgIm5hbWUiOiAiUHJlY2luY3QgMSIKICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJwcmVjaW5jdC0yIiwKICAgICAgIm5hbWUiOiAiUHJlY2luY3QgMiIKICAgIH0KICBdLAogICJiYWxsb3RTdHlsZXMiOiBbCiAgICB7CiAgICAgICJpZCI6ICIxTSIsCiAgICAgICJwcmVjaW5jdHMiOiBbInByZWNpbmN0LTEiLCAicHJlY2luY3QtMiJdLAogICAgICAiZGlzdHJpY3RzIjogWyJkaXN0cmljdC0xIl0sCiAgICAgICJwYXJ0eUlkIjogIjAiCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMkYiLAogICAgICAicHJlY2luY3RzIjogWyJwcmVjaW5jdC0xIiwgInByZWNpbmN0LTIiXSwKICAgICAgImRpc3RyaWN0cyI6IFsiZGlzdHJpY3QtMSJdLAogICAgICAicGFydHlJZCI6ICIxIgogICAgfQogIF0sCiAgInNlYWxVcmwiOiAiL3NlYWxzL1NhbXBsZS1TZWFsLnN2ZyIKfQo=';

/**
 * MIME type of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 */
export const mimeType = 'application/json';

/**
 * Path to a file containing this file's contents.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export function asFilePath(): string {
  const directoryPath = mkdtempSync(tmpdir() + sep);
  const filePath = join(directoryPath, 'electionMinimalExhaustiveSampleRightSideTargets.json');
  writeFileSync(filePath, asBuffer());
  return filePath;
}

/**
 * Convert to a `data:` URL of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json, suitable for embedding in HTML.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export function asDataUrl(): string {
  return `data:${mimeType};base64,${resourceDataBase64}`;
}

/**
 * Raw data of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export function asBuffer(): Buffer {
  return Buffer.from(resourceDataBase64, 'base64');
}

/**
 * Text content of data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export function asText(): string {
  return asBuffer().toString('utf-8');
}

/**
 * Full election definition for data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export const electionDefinition = safeParseElectionDefinition(
  asText()
).unsafeUnwrap();

/**
 * Election definition for data/electionMinimalExhaustiveSampleRightSideTargets/electionMinimalExhaustiveSampleRightSideTargets.json.
 *
 * SHA-256 hash of file data: 0d664a37dcf1db9d2fb69296ed89ba69586dd99d90f22ed8de6bdfb148031895
 */
export const election = electionDefinition.election;